/*
 * MIT License
 *
 * SiliconCode AutoMT - Library
 * Copyright (c) 2023 SiliconCode, LLC and Isaac Griffith, PhD
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package dev.siliconcode.auto_mt.list

import dev.siliconcode.auto_mt.lib.LinkedList
import org.junit.jupiter.api.Test

import static org.junit.jupiter.api.Assertions.*

class LinkedListTest {
    @Test void testConstructor() {
        def list = new LinkedList()
        assertEquals(0, list.size())
    }

    @Test void testAdd() {
        def list = new LinkedList()

        list.add('one')
        assertEquals(1, list.size())
        assertEquals('one', list.get(0))

        list.add('two')
        assertEquals(2, list.size())
        assertEquals('two', list.get(1))
    }

    @Test void testRemove() {
        def list = new LinkedList()

        list.add('one')
        list.add('two')
        assertTrue(list.remove('one'))

        assertEquals(1, list.size())
        assertEquals('two', list.get(0))

        assertTrue(list.remove('two'))
        assertEquals(0, list.size())
    }

    @Test void testRemoveMissing() {
        def list = new LinkedList()

        list.add('one')
        list.add('two')
        assertFalse(list.remove('three'))
        assertEquals(2, list.size())
    }
}
